filter {
   # Parse input as json
   json{
        source => "message"
    }
    # Add geo-data to global "from" ipv4 addresses
    if ! [from_geo] and [from_adr] and [from_adr] =~ /\d+.\d+.\d+.\d+/ {
       cidr {
       	     add_tag => [ "source_internal" ]
             address => [ "%{[from_adr]}" ]
             network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" ]
       }
       if "source_internal" not in [tags] {
       	  geoip {
            source => "[from_adr]"
            target => "[from_geo]"
            tag_on_failure => [ ]
          }
	  mutate { add_field => { "[from_geo][geo_scr]" => "geolite2" } }
    	} else {
          mutate { remove_tag => [ "source_internal" ] }
    	}
    }
    # Add geo-data to global "to" ipv4 addresses
    if ! [to_geo] and [to_adr] and [to_adr] =~ /\d+.\d+.\d+.\d+/ {
       cidr {
       	     add_tag => [ "source_internal" ]
             address => [ "%{[to_adr]}" ]
             network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" ]
       }
       if "source_internal" not in [tags] {
       	  geoip {
            source => "[to_adr]"
            target => "[to_geo]"
            tag_on_failure => [ ]
          }
	  mutate { add_field => { "[to_geo][geo_scr]" => "geolite2" } }
    	} else {
          mutate { remove_tag => [ "source_internal" ] }
    	}
    }
    # Fix issue with logstash-added hostname
    if [host] and ! [host][name] { mutate { rename => { "[host]" => "[host][name]" } } }
}