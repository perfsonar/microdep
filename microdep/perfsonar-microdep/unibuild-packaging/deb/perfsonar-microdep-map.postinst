#!/bin/sh
# postinst script for perfsonar-psconfig-maddash
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# Fix credentials to ensure access to Opensearch
	if [ -f /etc/perfsonar/opensearch/opensearch_login ]; then
    	   USER=`awk -F " " '{print $1}' /etc/perfsonar/opensearch/opensearch_login`
    	   PASSWD=`awk -F " " '{print $2}' /etc/perfsonar/opensearch/opensearch_login`
    	   sed -i "s|http://admin:no+nz+br|https://$USER:$PASSWD|g" /etc/perfsonar/microdep/microdep-config.yml
	fi

	# Init Microdep config db 
	if [ -f /etc/perfsonar/psconfig/pscheduler.d/toolkit-webui.json ]; then
	    # Read psconfig-data and set start time set to beginnig of yesterday local time (later repeated by perfsonar-microdep-watchconfig.service)
	    /usr/lib/perfsonar/bin/microdep_commands/microdep-psconfig-load.pl -c --db /etc/perfsonar/microdep/mp-dragonlab/etc/microdep.db --start-time $(date --date "today 00:00:00" +%s) /etc/perfsonar/psconfig/pscheduler.d/toolkit-webui.json
	fi

	# Add open read access to Microdep opensearch indices
	if [ -f /usr/lib/perfsonar/archive/config/roles.yml ]; then
	    grep -q -x -F -f /etc/perfsonar/microdep/roles_yml_patch /usr/lib/perfsonar/archive/config/roles.yml
	    if [ $? -eq 1 ]; then
		# Microdep index missing. Add.
		sed -i '/prometheus\*/r /etc/perfsonar/microdep/roles_yml_patch' /usr/lib/perfsonar/archive/config/roles.yml
	    fi
	    # Refresh config of opensearch security
	    /usr/lib/perfsonar/archive/perfsonar-scripts/pselastic_secure_pre.sh
	    /usr/lib/perfsonar/archive/perfsonar-scripts/pselastic_secure_pos.sh
	fi

	# Add Microdep button on main grafana dashboard (if not already present)
	grep -q  "Microdep map" /usr/lib/perfsonar/grafana/dashboards/toolkit/perfsonar-main.json
	if [ $? -gt 0 ]; then
	    # Find next available panel id
	    NEXTID=$(jq .panels[].id /usr/lib/perfsonar/grafana/dashboards/toolkit/perfsonar-main.json | sort -n | tail -n 1)
	    let NEXTID++
	    # Set new id in dashboard patch
	    PATCHFILE=$(mktemp)
	    jq --argjson nextid "$NEXTID" '.id = $nextid' /etc/perfsonar/microdep/grafana_dashboard_patch > $PATCHFILE
	    # Add new panel to main dashboard
	    DASHBOARDFILE=$(mktemp)
	    jq '.panels += [input]' /usr/lib/perfsonar/grafana/dashboards/toolkit/perfsonar-main.json  $PATCHFILE > $DASHBOARDFILE
	    mv $DASHBOARDFILE /usr/lib/perfsonar/grafana/dashboards/toolkit/perfsonar-main.json
	fi
	
	# Enable apache config
	a2enconf apache-microdep-map
	systemctl reload apache2.service || true
	
	# Enable systemd services (ignore failures)
	systemctl daemon-reload || true
	systemctl enable perfsonar-microdep-watchconfig.path || true
	systemctl start perfsonar-microdep-watchconfig.path || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
