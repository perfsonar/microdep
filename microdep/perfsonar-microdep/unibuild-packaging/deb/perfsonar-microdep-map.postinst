#!/bin/sh
# postinst script for perfsonar-psconfig-maddash
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# Read psconfig-data and set start time set to beginnig of yesterday local time (later repeated by perfsonar-microdep-watchconfig.service)
	if [ -f /etc/perfsonar/psconfig/pscheduler.d/toolkit-webui.json ]; then
	    /usr/lib/perfsonar/bin/microdep_commands/microdep-psconfig-load.pl -c --db /etc/perfsonar/microdep/mp-dragonlab/etc/microdep.db --start-time $(date --date "today 00:00:00" +%s) /etc/perfsonar/psconfig/pscheduler.d/toolkit-webui.json
	fi
	# Fix credentials to ensure access to Opensearch
	if [ -f /etc/perfsonar/opensearch/opensearch_login ]; then
    	   USER=`awk -F " " '{print $1}' /etc/perfsonar/opensearch/opensearch_login`
    	   PASSWD=`awk -F " " '{print $2}' /etc/perfsonar/opensearch/opensearch_login`
    	   sed -i "s|http://admin:no+nz+br|https://$USER:$PASSWD|g" /etc/perfsonar/microdep/microdep-config.yml
	fi

	# Enable systemd services (ignore failures)
	systemctl daemon-reload || true
	systemctl enable perfsonar-microdep-watchconfig.path || true
	systemctl start perfsonar-microdep-watchconfig.path || true

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
