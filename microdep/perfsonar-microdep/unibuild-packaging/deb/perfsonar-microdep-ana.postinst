#!/bin/sh
# postinst script for perfsonar-psconfig-maddash
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# Prepare DB for trace analyser (ignore errors)
        /usr/lib/perfsonar/bin/microdep_commands/create_new_db.sh -s -t postgres -d routingmonitor || true
	# Fix access to db
	if [ -f /var/lib/pgsql/data/pg_hba.conf ]; then
	    /usr/lib/perfsonar/bin/microdep_commands/fix-pgsql-access.sh -i /var/lib/pgsql/data/pg_hba.conf || true
	fi
	
	if [ -f /etc/logstash/pipelines.yml -a  -z "$(grep "pipeline.id: microdep" /etc/logstash/pipelines.yml)" ]; then
	    echo -e "- path.config: /usr/lib/perfsonar/logstash/pipeline/microdep/*.conf\n  pipeline.ecs_compatibility: disabled
\n  pipeline.id: microdep\n" >> /etc/logstash/pipelines.yml
	    # Add microdep index pattern to pscheduler user ... but this require opensearch to run...
	    #sed -i "s|- 'pscheduler_\*'|- 'pscheduler_\*'\n      - 'dragonlab\*'|" /etc/opensearch/opensearch-security/roles.yml; \
	    #sed -i "s|- 'pscheduler\*'|- 'pscheduler\*'\n      - 'dragonlab\*'|" /etc/opensearch/opensearch-security/roles.yml; \
	    #/usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh -f /etc/opensearch/opensearch-security/roles.yml -icl -nhnv -cert /etc/opensearch/admin.pem -cacert /etc/opensearch/root-ca.pem -key /etc/opensearch/admin-key.pem -t config 
            # ... substitute in user+passwd instead
	    USER=`awk -F " " '{print $1}' /etc/perfsonar/opensearch/opensearch_login` && sed -i "s|\${opensearch_admin_user}|$USER|g" %{install_base}/logstash/pipeline/microdep/03-microdep-outputs.conf
	    PASSWD=`awk -F " " '{print $2}' /etc/perfsonar/opensearch/opensearch_login` && sed -i "s|\${opensearch_admin_password}|$PASSWD|g" %{install_base}/logstash/pipeline/microdep/03-microdep-outputs.conf
	fi
	# Prepare folder for json output from analytics scripts read by logstash
	mkdir -p /var/lib/logstash/microdep && chown perfsonar:perfsonar /var/lib/logstash/microdep && chmod 755 /var/lib/logstash/microdep

	# Enable executing of microdep ana scripts if SElinux is enabled
	if [ -f /sbin/restorecon ]; then
	    /sbin/restorecon -irv /usr/lib/perfsonar/bin/microdep_commands/
	fi
	# Enable systemd services (ignore failures)
	systemctl daemon-reload || true
	systemctl enable rabbitmq-server.service || true
	systemctl enable perfsonar-microdep-gap-ana.service || true
	systemctl enable perfsonar-microdep-trace-ana.service || true
	systemctl enable perfsonar-microdep-restart.timer || true
	systemctl start rabbitmq-server.service || true
	systemctl start perfsonar-microdep-gap-ana.service || true 
	systemctl start perfsonar-microdep-trace-ana.service || true
	systemctl start perfsonar-microdep-restart.timer || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
